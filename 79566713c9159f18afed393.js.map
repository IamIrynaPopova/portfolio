{"version":3,"file":"79566713c9159f18afed393.js","mappings":"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","sources":["webpack://portfolio/./node_modules/uuid/dist/esm-browser/rng.js","webpack://portfolio/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://portfolio/./node_modules/uuid/dist/esm-browser/v1.js","webpack://portfolio/./src/components/ProjectsList.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || unsafeStringify(b);\n}\n\nexport default v1;","import React from \"react\";\nimport { v1 as uuidv1 } from \"uuid\";\n\nconst ProjectsList = ({ projects }) => {\n  return (\n    <section id=\"project\" className=\"projects \">\n      <div className=\"projects-wrapper container\">\n        <div className=\"projects__title-wrapper\">\n          <h2 className=\"projects__title\">Мої проєкти</h2>\n          <p className=\"projects__text\">\n            сайти, над якими я працювала сама та в команді\n          </p>\n        </div>\n        <div className=\"projects__list-wrapper\">\n          <ul className=\"projects__list\">\n            {projects.map(({ name, photo, text, stack, link, code }) => (\n              <li className=\"projects__item\" key={uuidv1()}>\n                <img className=\"projects__image\" src={photo} alt={name} />\n                <div className=\"projects__box\">\n                  <div className=\"projects__box--item\">\n                    <h3 className=\"projects__name\">{name}</h3>\n                    <p className=\"projects__description\">{text}</p>\n                  </div>\n                  <div className=\"projects__box--item\">\n                    <p className=\"projects__stack\">\n                      <span className=\"projects__stack-title\">\n                        Tech stack:{\" \"}\n                      </span>\n                      {stack}\n                    </p>\n                    <ul className=\"projects__links\">\n                      <li className=\"projects__links-item\">\n                        <a\n                          target=\"blank\"\n                          href={link}\n                          className=\"projects__link-code\"\n                        >\n                          <svg className=\"projects__svg\">\n                            <use href=\"./assets/sprite.svg#link\"></use>\n                          </svg>\n                          link\n                        </a>\n                      </li>\n                      <li className=\"projects__links-item\">\n                        <a\n                          target=\"blank\"\n                          href={code}\n                          className=\"projects__link-code\"\n                        >\n                          <svg className=\"projects__svg\">\n                            <use href=\"./assets/sprite.svg#github\"></use>\n                          </svg>\n                          code\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProjectsList;\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","byteToHex","i","push","toString","slice","_nodeId","_clockseq","_lastMSecs","_lastNSecs","options","buf","offset","b","Array","node","clockseq","undefined","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","arr","unsafeStringify","_ref","projects","React","id","className","map","_ref2","name","photo","text","stack","link","code","key","uuidv1","src","alt","target","href"],"sourceRoot":""}